<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
    scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
    debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
 -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!--定义变量值-->
    <property name="WEB_NAME" value="web-dubbo-consumer"/>
    <property name="LOG_DIR" value="d:/log/"/>
    <!--
        负责把日志输出到控制台的组件
     -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoding>UTF-8</encoding>
        <encoder>
            <pattern>[%d{HH:mm:ss.SSS}][%p][%c{40}][%t] %m%n</pattern>
        </encoder>
    </appender>

    <!--
        负责把日志输出到文件的组件
        滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件
     -->
    <appender name="debug" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoding>UTF-8</encoding>
        <!-- 被写入的文件名，可以是相对目录，也可以是绝对目录，如果上级目录不存在会自动创建，没有默认值。 -->
        <file>${LOG_DIR}${WEB_NAME}.debug.log</file>
        <!-- 如果是 true，日志被追加到文件结尾，如果是 false，清空现存文件，默认是true。 -->
        <append>true</append>
        <encoder>
            <pattern>[%d{HH:mm:ss.SSS}][%p][%c{40}][%t] %m%n</pattern>
        </encoder>
        <!-- 
        	当发生滚动时，决定RollingFileAppender的行为，涉及文件移动和重命名。
			属性class定义具体的滚动策略类
         -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 包含文件名及“%d”转换符，“%d”可以包含一个java.text.SimpleDateFormat指定的时间格式，如：%d{yyyy-MM} -->
            <fileNamePattern>${LOG_DIR}${WEB_NAME}.debug.%d{yyyy-MM-dd}.log</fileNamePattern>
            <append>true</append>
            <!-- 
            	控制保留的归档文件的最大数量，超出数量就删除旧文件。
            	假设设置每个月滚动，且<maxHistory>是6，则只保存最近6个月的文件，删除之前的旧文件。
            	注意，删除旧文件是，那些为了归档而创建的目录也会被删除。 
            -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <!--大于这个级别的日志-->
            <onMatch>ACCEPT</onMatch>
            <!--小于于这个级别的日志-->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="info" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoding>UTF-8</encoding>
        <File>${LOG_DIR}${WEB_NAME}.info.log</File>
        <append>true</append>
        <encoder>
            <pattern>[%d{HH:mm:ss.SSS}][%p][%c{40}][%t] %m%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}${WEB_NAME}.info.%d{yyyy-MM-dd}.log</fileNamePattern>
            <append>true</append>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="warn" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoding>UTF-8</encoding>
        <File>${LOG_DIR}${WEB_NAME}.warn.log</File>
        <append>true</append>
        <encoder>
            <pattern>[%d{HH:mm:ss.SSS}][%p][%c{40}][%t] %m%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}${WEB_NAME}.warn.%d{yyyy-MM-dd}.log</fileNamePattern>
            <append>true</append>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoding>UTF-8</encoding>
        <File>${LOG_DIR}${WEB_NAME}.error.log</File>
        <append>true</append>
        <encoder>
            <pattern>[%d{HH:mm:ss.SSS}][%p][%c{40}][%t] %m%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}${WEB_NAME}.error.%d{yyyy-MM-dd}.log</fileNamePattern>
            <append>true</append>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!--
        用来设置某一个包或具体的某一个类的日志打印级别、以及指定<appender>
        name：用来指定受此logger约束的某一个包或者具体的某一个类,包路径越少越是父级,即name=”java”是name=”java.lang”的父级
        level：用来设置打印级别，五个常用打印级别从低至高依次为trace、debug、info、warn、error，如果未设置此级别，那么当前logger会继承上级的级别
        additivity：是否向上级logger传递打印信息，默认为true
    -->
    <!--<logger name="tech.edwardvan.webssmxml" additivity="false" level="debug">-->
        <!--<appender-ref ref="console"/>-->
        <!--<appender-ref ref="debug"/>-->
        <!--<appender-ref ref="info"/>-->
        <!--<appender-ref ref="warn"/>-->
        <!--<appender-ref ref="error"/>-->
    <!--</logger>-->

    <!-- 所有<loger>的上级 -->
    <root level="info">
        <appender-ref ref="console"/>
        <appender-ref ref="debug"/>
        <appender-ref ref="info"/>
        <appender-ref ref="warn"/>
        <appender-ref ref="error"/>
    </root>

</configuration>