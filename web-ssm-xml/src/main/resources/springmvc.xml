<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd  http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--扫描controller注解,禁用默认的规则include-filter才会生效-->
    <context:component-scan base-package="tech.edwardvan.webssmxml" use-default-filters="false">
        <!--只扫描@Controller注解-->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:include-filter>
    </context:component-scan>

    <!--处理器映射器-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"></bean>-->
    <!--处理器适配器-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"></bean>-->
    <!--等价于上面两行配置-->
    <mvc:annotation-driven></mvc:annotation-driven>

    <!--
		default-servlet-handler将在SpringMVC上下文中定义一个DefaultServletHttpRequestHandler,
		它会对进入DispatcherServlet的请求进行筛查,如果发现是没有经过映射的请求,就将该请求交由Web应用服务器默认的Servlet处理.
		如果不是静态资源的请求,才由DispatcherServlet继续处理
		一般Web应用服务器默认的Servlet的名称都是default.
		若所使用的WEB服务器的默认Servlet名称不是default,则需要通过default-servlet-name属性显式指定
	-->
    <mvc:default-servlet-handler/>

    <!--视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"></bean>

    <!--SpringMVC拦截器-->
    <mvc:interceptors>
        <bean class="tech.edwardvan.webssmxml.config.MyInterceptor"></bean>
    </mvc:interceptors>
    
    <!--全局异常处理器-->
    <bean class="tech.edwardvan.webssmxml.config.CustomExceptionResolver"></bean>

    <!-- 引用Swagger 配置类 -->
    <bean class="tech.edwardvan.webssmxml.config.SwaggerConfig"></bean>
</beans>